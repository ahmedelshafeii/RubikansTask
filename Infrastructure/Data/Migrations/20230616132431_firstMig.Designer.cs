// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(SaledInvoiceContext))]
    [Migration("20230616132431_firstMig")]
    partial class firstMig
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Core.Entities.DefItem", b =>
                {
                    b.Property<int>("ItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemID"));

                    b.Property<string>("ItemArName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ItemEnName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ItemSerial")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<decimal>("Vat")
                        .HasColumnType("DECIMAL(5,2)");

                    b.HasKey("ItemID");

                    b.ToTable("DefItems");
                });

            modelBuilder.Entity("Core.Entities.DefStore", b =>
                {
                    b.Property<int>("StoreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StoreID"));

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("StoreArName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("StoreEnName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("StoreSerial")
                        .HasColumnType("int");

                    b.HasKey("StoreID");

                    b.ToTable("DefStores");
                });

            modelBuilder.Entity("Core.Entities.TrxInvoiceDetails", b =>
                {
                    b.Property<int>("InvoiceDetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceDetID"));

                    b.Property<decimal>("CashDiscPercent")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<int>("InvoiceID")
                        .HasColumnType("int");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<decimal>("Qty")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<decimal>("TaxPercent")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<decimal>("TotalAfterDiscount")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<decimal>("TotalInvoiceNet")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<decimal>("TotalValue")
                        .HasColumnType("DECIMAL(18,2)");

                    b.HasKey("InvoiceDetID");

                    b.HasIndex("InvoiceID");

                    b.HasIndex("ItemID");

                    b.ToTable("TrxInvoiceDetails");
                });

            modelBuilder.Entity("Core.Entities.TrxInvoiceHead", b =>
                {
                    b.Property<int>("InvoiceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceID"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<string>("InvoiceDescription")
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("InvoiceSerial")
                        .HasColumnType("int");

                    b.Property<int>("StoreID")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAfterDiscount")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<decimal>("TotalDiscount")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<decimal>("TotalInvoiceNet")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<decimal>("TotalTax")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<decimal>("TotalbeforeDiscount")
                        .HasColumnType("DECIMAL(18,2)");

                    b.HasKey("InvoiceID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("StoreID");

                    b.ToTable("TrxInvoiceHeads");
                });

            modelBuilder.Entity("Core.Entities.defCustomer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerID"));

                    b.Property<decimal>("CashDiscPercent")
                        .HasColumnType("DECIMAL(5,2)");

                    b.Property<string>("CustomerArName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CustomerEnName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("CustomerSerial")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Core.Entities.TrxInvoiceDetails", b =>
                {
                    b.HasOne("Core.Entities.TrxInvoiceHead", "TrxInvoiceHead")
                        .WithMany("TrxInvoiceDetails")
                        .HasForeignKey("InvoiceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.DefItem", "DefItem")
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("ItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DefItem");

                    b.Navigation("TrxInvoiceHead");
                });

            modelBuilder.Entity("Core.Entities.TrxInvoiceHead", b =>
                {
                    b.HasOne("Core.Entities.defCustomer", "defCustomer")
                        .WithMany("Invoices")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.DefStore", "DefStore")
                        .WithMany("Invoices")
                        .HasForeignKey("StoreID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DefStore");

                    b.Navigation("defCustomer");
                });

            modelBuilder.Entity("Core.Entities.DefItem", b =>
                {
                    b.Navigation("InvoiceDetails");
                });

            modelBuilder.Entity("Core.Entities.DefStore", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("Core.Entities.TrxInvoiceHead", b =>
                {
                    b.Navigation("TrxInvoiceDetails");
                });

            modelBuilder.Entity("Core.Entities.defCustomer", b =>
                {
                    b.Navigation("Invoices");
                });
#pragma warning restore 612, 618
        }
    }
}
